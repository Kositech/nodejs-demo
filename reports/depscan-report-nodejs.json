{"id": "CVE-2021-23343", "package": "npm:path-parse", "package_type": "npm", "package_usage": "optional", "version": "<1.0.7", "fix_version": "1.0.7", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Regular Expression Denial of Service in path parse\nAffected versions of npm package `path parse` are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst case time complexity.\nUpgrade to version 1.0.7 or later\n            ", "related_urls": []}
{"id": "CVE-2021-23383", "package": "npm:handlebars", "package_type": "npm", "package_usage": "optional", "version": "<4.7.7", "fix_version": "4.7.7", "severity": "CRITICAL", "cvss_score": "9.0", "short_description": "# Prototype Pollution in handlebars\nThe package handlebars before 4.7.7 are vulnerable to Prototype Pollution when selecting certain compiling options to compile templates coming from an untrusted source.\nUpgrade to version 4.7.7 or later\n            ", "related_urls": []}
{"id": "NPM-1069567", "package": "npm:constantinople", "package_type": "npm", "package_usage": "optional", "version": "<3.1.1", "fix_version": "3.1.1", "severity": "CRITICAL", "cvss_score": "9.0", "short_description": "# Sandbox Bypass Leading to Arbitrary Code Execution in constantinople\nVersions of `constantinople` prior to 3.1.1 are vulnerable to a sandbox bypass which can lead to arbitrary code execution.\n\n\n## Recommendation\n\nUpdate to version 3.1.1 or later.\nUpgrade to version 3.1.1 or later\n            ", "related_urls": []}
{"id": "NPM-1070199", "package": "npm:clean-css", "package_type": "npm", "package_usage": "optional", "version": "<4.1.11", "fix_version": "4.1.11", "severity": "LOW", "cvss_score": "2.0", "short_description": "# Regular Expression Denial of Service in clean css\nVersion of `clean css` prior to 4.1.11 are vulnerable to Regular Expression Denial of Service (ReDoS). Untrusted input may cause catastrophic backtracking while matching regular expressions. This can cause the application to be unresponsive leading to Denial of Service.\n\n\n## Recommendation\n\nUpgrade to version 4.1.11 or higher.\nUpgrade to version 4.1.11 or later\n            ", "related_urls": []}
{"id": "CVE-2020-7774", "package": "npm:y18n", "package_type": "npm", "package_usage": "optional", "version": ">==4.0.0", "fix_version": "4.0.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Prototype Pollution in y18n\n### Overview\n\nThe npm package `y18n` before versions 3.2.2, 4.0.1, and 5.0.5 is vulnerable to Prototype Pollution. \n\n### POC\n\n```\nconst y18n = require('y18n')();\n\ny18n.setLocale('__proto__');\ny18n.updateLocale({polluted: true});\n\nconsole.log(polluted); // true\n```\n\n### Recommendation\n\nUpgrade to version 3.2.2, 4.0.1, 5.0.5 or later.\nUpgrade to version 4.0.1 or later\n            ", "related_urls": []}
{"id": "CVE-2020-8203", "package": "npm:lodash", "package_type": "npm", "package_usage": "optional", "version": "<4.17.20", "fix_version": "4.17.20", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Prototype Pollution in lodash\nVersions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user supplied. Being affected by this issue requires zipping objects based on user provided property arrays.\n\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.\nUpgrade to version 4.17.20 or later\n            ", "related_urls": []}
{"id": "CVE-2020-28469", "package": "npm:glob-parent", "package_type": "npm", "package_usage": "optional", "version": "<5.1.2", "fix_version": "5.1.2", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# glob parent before 5.1.2 vulnerable to Regular Expression Denial of Service in enclosure regex\nThis affects the package glob parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.\nUpgrade to version 5.1.2 or later\n            ", "related_urls": []}
{"id": "CVE-2020-7608", "package": "npm:yargs-parser", "package_type": "npm", "package_usage": "optional", "version": ">=6.0.0-<13.1.2", "fix_version": "13.1.2", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# yargs parser Vulnerable to Prototype Pollution\nAffected versions of `yargs parser` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `  foo.__proto__.bar baz'` adds a `bar` property with value `baz` to all objects. This is only exploitable if attackers have control over the arguments being passed to `yargs parser`.\n\n\n\n## Recommendation\n\nUpgrade to versions 13.1.2, 15.0.1, 18.1.1 or later.\nUpgrade to version 13.1.2 or later\n            ", "related_urls": []}
{"id": "CVE-2021-3918", "package": "npm:json-schema", "package_type": "npm", "package_usage": "optional", "version": "<0.4.0", "fix_version": "0.4.0", "severity": "CRITICAL", "cvss_score": "9.0", "short_description": "# json schema is vulnerable to Prototype Pollution\njson schema before version 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution').\nUpgrade to version 0.4.0 or later\n            ", "related_urls": []}
{"id": "CVE-2020-15366", "package": "npm:ajv", "package_type": "npm", "package_usage": "optional", "version": "<6.12.3", "fix_version": "6.12.3", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Prototype Pollution in Ajv\nAn issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)\nUpgrade to version 6.12.3 or later\n            ", "related_urls": []}
{"id": "CVE-2021-23337", "package": "npm:lodash", "package_type": "npm", "package_usage": "optional", "version": "<4.17.21", "fix_version": "4.17.21", "severity": "HIGH", "cvss_score": "7.5", "short_description": "# Command Injection in lodash\n`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.\nUpgrade to version 4.17.21 or later\n            ", "related_urls": []}
{"id": "CVE-2020-28500", "package": "npm:lodash", "package_type": "npm", "package_usage": "optional", "version": "<4.17.21", "fix_version": "4.17.21", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Regular Expression Denial of Service (ReDoS) in lodash\nAll versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now()   time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now()   time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now()   time2; console.log(\"time_cost2: \" + time_cost2)\nUpgrade to version 4.17.21 or later\n            ", "related_urls": []}
{"id": "CVE-2021-23369", "package": "npm:handlebars", "package_type": "npm", "package_usage": "optional", "version": "<4.7.7", "fix_version": "4.7.7", "severity": "CRITICAL", "cvss_score": "9.0", "short_description": "# Remote code execution in handlebars when compiling templates\nThe package handlebars before 4.7.7 are vulnerable to Remote Code Execution (RCE) when selecting certain compiling options to compile templates coming from an untrusted source.\nUpgrade to version 4.7.7 or later\n            ", "related_urls": []}
{"id": "CVE-2021-3807", "package": "npm:ansi-regex", "package_type": "npm", "package_usage": "optional", "version": ">=4.0.0-<4.1.1", "fix_version": "4.1.1", "severity": "HIGH", "cvss_score": "7.5", "short_description": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity", "related_urls": ["https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9", "https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994", "https://www.oracle.com/security-alerts/cpuapr2022.html"]}
